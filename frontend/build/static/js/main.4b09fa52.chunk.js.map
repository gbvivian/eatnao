{"version":3,"sources":["assets/loading.gif","components/Choice.jsx","components/Restaurant.jsx","components/Page.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Choice","props","react_default","a","createElement","Fragment","Link","className","to","dest","onClick","event","handleSelection","val","image","Restaurant","directionsUrl","concat","myLat","myLong","lat","long","href","target","rel","name","src","img","alt","Page","header","display","App","state","cuisines","cuisineIcons","priceIcons","prices","distances","restaurants","isLoadingRestaurants","data","selectedCuisine","selectedPrice","handleSelectCuisine","cuisine","_this","handleSelectPrice","price","setState","getPosition","then","position","coords","latitude","longitude","getRestaurants","restaurantsResponse","console","log","catch","error","warn","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","params","query","Object","keys","map","k","encodeURIComponent","join","fetch","response","json","_this2","this","restaurantPageProps","loading","r","components_Restaurant","key","id","image_url","coordinates","cuisineChoices","index","components_Choice","priceChoices","BrowserRouter","Route","path","exact","strict","render","components_Page","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b09fa52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.ed236853.gif\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Choice(props) {\n\tvar setSelection = (event) => {\n\t\tprops.handleSelection(event, props.val);\n\t};\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Link className=\"Choice\" to={props.dest} onClick={setSelection}>\n\t\t\t\t{props.image}\n\t\t\t</Link>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Choice;\n","import React from 'react';\n\nfunction Restaurant(props) {\n\tconst directionsUrl = `https://www.google.com/maps/dir/?api=1&origin=${props.myLat},${props.myLong}&destination=${props.lat},${props.long}`;\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<p className=\"Restaurant-header\">\n\t\t\t\t\t<a href={directionsUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t{props.name}\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<img className=\"Restaurant-image\" src={props.img} alt={props.name} />\n\t\t</div>\n\t);\n}\n\nexport default Restaurant;\n","import React from 'react';\n\nfunction Page(props) {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<p className=\"Header\">{props.header}</p>\n\t\t\t{props.display}\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Page;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport loading from './assets/loading.gif';\n\nimport Choice from './components/Choice';\nimport Restaurant from './components/Restaurant';\nimport Page from './components/Page';\n\nimport './App.css';\n\nclass App extends Component {\n\tstate = {\n\t\tcuisines: [ 'pizza', 'japanese', 'burgers' ],\n\t\tcuisineIcons: [ '🍕', '🍣', '🍔' ],\n\t\tpriceIcons: [ '💲', '💲💲', '💲💲💲' ],\n\t\tprices: [ '1', '2', '3' ],\n\t\tdistances: [],\n\t\trestaurants: [],\n\t\tisLoadingRestaurants: false\n\t};\n\n\tdata = {\n\t\tselectedCuisine: '',\n\t\tselectedPrice: null,\n\t\tmyLat: null,\n\t\tmyLong: null\n\t};\n\n\thandleSelectCuisine = (event, cuisine) => {\n\t\tthis.data.selectedCuisine = cuisine;\n\t};\n\n\thandleSelectPrice = (event, price) => {\n\t\tthis.setState({ isLoadingRestaurants: true });\n\t\tthis.data.selectedPrice = price;\n\n\t\tthis.getPosition()\n\t\t\t.then((position) => {\n\t\t\t\tthis.data.myLat = position.coords.latitude;\n\t\t\t\tthis.data.myLong = position.coords.longitude;\n\t\t\t\tthis.getRestaurants({\n\t\t\t\t\tlat: position.coords.latitude,\n\t\t\t\t\tlong: position.coords.longitude,\n\t\t\t\t\tcuisine: this.data.selectedCuisine,\n\t\t\t\t\tprice: this.data.selectedPrice\n\t\t\t\t}).then((restaurantsResponse) => {\n\t\t\t\t\tconsole.log(restaurantsResponse);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoadingRestaurants: false,\n\t\t\t\t\t\trestaurants: restaurantsResponse\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.warn(error);\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoadingRestaurants: false,\n\t\t\t\t\trestaurants: []\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\tgetPosition = (options) => {\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tnavigator.geolocation.getCurrentPosition(resolve, reject, options);\n\t\t});\n\t};\n\n\tgetRestaurants = (params) => {\n\t\tconst query = Object.keys(params)\n\t\t\t.map((k) => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n\t\t\t.join('&');\n\t\treturn fetch('/api/restaurants?' + query)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\treturn response;\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t};\n\n\trender() {\n\t\tconst restaurantPageProps = this.state.isLoadingRestaurants\n\t\t\t? {\n\t\t\t\t\theader: 'Looking for places...',\n\t\t\t\t\tdisplay: <img src={loading} alt=\"loading\" className=\"Loading-image\" />\n\t\t\t\t}\n\t\t\t: {\n\t\t\t\t\theader: 'We found something near you ✨',\n\t\t\t\t\tdisplay: (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.state.restaurants.map((r) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Restaurant\n\t\t\t\t\t\t\t\t\t\tclassName=\"Restaurant\"\n\t\t\t\t\t\t\t\t\t\tname={r.name}\n\t\t\t\t\t\t\t\t\t\tkey={r.id}\n\t\t\t\t\t\t\t\t\t\timg={r.image_url}\n\t\t\t\t\t\t\t\t\t\tlat={r.coordinates.latitude}\n\t\t\t\t\t\t\t\t\t\tlong={r.coordinates.longitude}\n\t\t\t\t\t\t\t\t\t\tmyLat={this.data.myLat}\n\t\t\t\t\t\t\t\t\t\tmyLong={this.data.myLong}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t};\n\n\t\tvar cuisineChoices = (\n\t\t\t<span>\n\t\t\t\t{this.state.cuisines.map((cuisine, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Choice\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tdest=\"/budget\"\n\t\t\t\t\t\t\timage={this.state.cuisineIcons[index]}\n\t\t\t\t\t\t\tval={this.state.cuisines[index]}\n\t\t\t\t\t\t\thandleSelection={this.handleSelectCuisine}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</span>\n\t\t);\n\n\t\tvar priceChoices = (\n\t\t\t<span>\n\t\t\t\t{this.state.prices.map((price, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Choice\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tdest=\"/restaurants\"\n\t\t\t\t\t\t\timage={this.state.priceIcons[index]}\n\t\t\t\t\t\t\tval={this.state.prices[index]}\n\t\t\t\t\t\t\thandleSelection={this.handleSelectPrice}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</span>\n\t\t);\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\tstrict\n\t\t\t\t\t\trender={() => <Page header=\"What are you craving?\" display={cuisineChoices} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/budget\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\tstrict\n\t\t\t\t\t\trender={() => <Page header=\"What's your budget?\" display={priceChoices} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/restaurants\" exact strict render={() => <Page {...restaurantPageProps} />} />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}